import type { HelixEventSubDropEntitlementGrantFilter, HelixEventSubSubscription } from '@twurple/api';
import { EventSubDropEntitlementGrantEvent } from '../events/EventSubDropEntitlementGrantEvent';
import { type EventSubDropEntitlementGrantEventData } from '../events/EventSubDropEntitlementGrantEvent.external';
import type { EventSubBase } from '../EventSubBase';
import { EventSubSubscription } from './EventSubSubscription';
/**
 * @private
 */
export declare class EventSubDropEntitlementGrantSubscription extends EventSubSubscription<EventSubDropEntitlementGrantEvent> {
    private readonly _filter;
    /** @protected */ readonly _cliName = "transaction";
    readonly authUserId: null;
    constructor(handler: (data: EventSubDropEntitlementGrantEvent) => void, client: EventSubBase, _filter: HelixEventSubDropEntitlementGrantFilter);
    get id(): string;
    protected transformData(data: EventSubDropEntitlementGrantEventData): EventSubDropEntitlementGrantEvent;
    protected _subscribe(): Promise<HelixEventSubSubscription>;
}
//# sourceMappingURL=EventSubDropEntitlementGrantSubscription.d.ts.map