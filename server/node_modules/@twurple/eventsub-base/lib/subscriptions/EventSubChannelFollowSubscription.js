"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelFollowSubscription = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@twurple/common");
const EventSubChannelFollowEvent_1 = require("../events/EventSubChannelFollowEvent");
const EventSubSubscription_1 = require("./EventSubSubscription");
/**
 * @private
 */
let EventSubChannelFollowSubscription = class EventSubChannelFollowSubscription extends EventSubSubscription_1.EventSubSubscription {
    constructor(handler, client, _userId, _moderatorId) {
        super(handler, client);
        this._userId = _userId;
        this._moderatorId = _moderatorId;
        /** @protected */ this._cliName = 'follow';
    }
    get id() {
        if (this._moderatorId) {
            return `channel.follow.${this._userId}.${this._moderatorId}`;
        }
        return `channel.follow.${this._userId}`;
    }
    get authUserId() {
        var _a;
        return (_a = this._moderatorId) !== null && _a !== void 0 ? _a : this._userId;
    }
    transformData(data) {
        return new EventSubChannelFollowEvent_1.EventSubChannelFollowEvent(data, this._client._apiClient);
    }
    async _subscribe() {
        const transport = await this._getTransportOptions();
        if (this._moderatorId) {
            return await this._client._apiClient.eventSub.subscribeToChannelFollowEventsV2(this._userId, this._moderatorId, transport);
        }
        return await this._client._apiClient.eventSub.subscribeToChannelFollowEvents(this._userId, transport);
    }
};
EventSubChannelFollowSubscription = tslib_1.__decorate([
    (0, common_1.rtfm)('eventsub-base', 'EventSubSubscription')
], EventSubChannelFollowSubscription);
exports.EventSubChannelFollowSubscription = EventSubChannelFollowSubscription;
