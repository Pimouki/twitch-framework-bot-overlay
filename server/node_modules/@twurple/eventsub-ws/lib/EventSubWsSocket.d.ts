import { type LoggerOptions } from '@d-fischer/logger';
import { type EventSubWsListener } from './EventSubWsListener';
/** @private */
export declare class EventSubWsSocket {
    private readonly _listener;
    private readonly _userId;
    private readonly _connection;
    private _sessionId?;
    private readonly _initialUrl;
    private _reconnectInProgress;
    private _reconnectUrl?;
    private _keepaliveTimeout;
    private _keepaliveTimer;
    private readonly _logger;
    private _readyToSubscribe;
    constructor(_listener: EventSubWsListener, _userId: string, initialUrl: string, loggerOptions?: Partial<LoggerOptions>);
    start(): void;
    stop(): void;
    get readyToSubscribe(): boolean;
    get sessionId(): string | undefined;
    get userId(): string;
    private _initializeKeepaliveTimeout;
    private _clearKeepaliveTimer;
    private _restartKeepaliveTimer;
    private _handleKeepaliveTimeout;
}
//# sourceMappingURL=EventSubWsSocket.d.ts.map