"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberUtils = void 0;
var NumberUtils;
(function (NumberUtils) {
    function lerp(t, a, b) {
        return a + t * (b - a);
    }
    NumberUtils.lerp = lerp;
    NumberUtils.PI = Math.PI;
    NumberUtils.PI2 = NumberUtils.PI * 2;
    NumberUtils.HALF_PI = NumberUtils.PI / 2;
    NumberUtils.QUART_PI = NumberUtils.PI / 4;
    NumberUtils.TENTH_PI = NumberUtils.PI / 10;
    NumberUtils.TWENTIETH_PI = NumberUtils.PI / 20;
    NumberUtils.rangeLoop = (min, n, max) => {
        if (max < 0) {
            return n > max ? (max % n) + min : n < min ? (min - n + max) % max : n;
        }
        return n > max ? (n % max) + min : n < min ? (n - min + max) % max : n;
    };
    NumberUtils.angleRangeLoop = (angle) => NumberUtils.rangeLoop(-NumberUtils.PI2, angle, NumberUtils.PI2);
    NumberUtils.clamp = (min, n, max) => Math.min(Math.max(n, min), max);
    NumberUtils.round = (n, precision) => Math.round(n * precision) / precision;
    NumberUtils.tens = (n) => Math.ceil(n / 10) - 1;
    NumberUtils.finales = (n) => Math.abs(n) % 10;
    function inRange(n, min, max) {
        return n >= Math.min(min, max) && n <= Math.max(min, max);
    }
    NumberUtils.inRange = inRange;
    /**
     *
     * @param point nombre de point qui seront converties en valeur
     * @param scalePoint échelle de grandeur de points à avoir pour atteindre le cap maximum
     * @param maxVal
     * @param minVal minimum value
     */
    NumberUtils.scaleHyperTangent = (point, scalePoint, maxVal, minVal = 0) => Math.tanh(point / scalePoint) * (maxVal - minVal) + minVal;
    NumberUtils.randomRange = (max, min) => {
        if (typeof min !== "undefined") {
            if (min > max) {
                max = min;
            }
            return Math.random() * (max - min) + min;
        }
        return Math.random() * max * 2 - max;
    };
    NumberUtils.average = (numbers) => {
        return numbers.reduce((a, b) => a + b, 0) / numbers.length;
    };
})(NumberUtils = exports.NumberUtils || (exports.NumberUtils = {}));
//# sourceMappingURL=number-utils.js.map