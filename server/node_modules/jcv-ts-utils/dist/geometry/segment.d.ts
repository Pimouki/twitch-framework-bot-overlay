import { Point } from "./point";
export declare module Segment {
    import Point2 = Point.Point2;
    type Segment2 = {
        p1: Point2;
        p2: Point2;
    };
    function wedge({ p1: { x: p1x, y: p1y }, p2: { x: p2x, y: p2y }, }: Segment2): number;
    function normalized(segment: Segment2): Point2;
    function toPoint({ p1: { x: p1x, y: p1y }, p2: { x: p2x, y: p2y }, }: Segment2): Point2;
    function SegmentAddLength(segment: Segment2, backward?: boolean): Segment2;
    function center({ p1: { x: p1x, y: p1y }, p2: { x: p2x, y: p2y }, }: Segment2): Point2;
    function length({ p1, p2 }: Segment2): number;
    function forwardAngle({ p1, p2 }: Segment2): number;
    function backwardAngle({ p1, p2 }: Segment2): number;
    function interpolation({ p1: { x: p1x, y: p1y }, p2: { x: p2x, y: p2y } }: Segment2, t: number): Point2;
}
