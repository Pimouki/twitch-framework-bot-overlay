import { Point } from "./point";
import { Rectangle } from "./rectangle";
import { Circle } from "./circle";
import { Segment } from "./segment";
export declare module Intersection {
    import Point2 = Point.Point2;
    import Rectangle2 = Rectangle.Rectangle2;
    import Circle2 = Circle.Circle2;
    import Segment2 = Segment.Segment2;
    function pointInRectangle({ x: x, y: y }: Point2, rectangle: Rectangle2): boolean;
    function pointInCircle(point: Point2, circle: Circle2, strict?: boolean): boolean;
    function cercleInRectangle(circle: Circle2, rect: Rectangle2): boolean;
    function rectInRect(rectA: Rectangle2, rectB: Rectangle2): boolean;
    function pointToSegment(point: Point2, { p1, p2 }: Segment2): boolean;
    function segmentToSegment(segmentA: Segment2, segmentB: Segment2, projection?: boolean): Point2 | null;
    function segmentToLine({ p1: { x: sP1x, y: sP1y }, p2: { x: sP2x, y: sP2y } }: Segment2, { p1: { x: lP1x, y: lP1y }, p2: { x: lP2x, y: lP2y } }: Segment2): Point2 | null;
    function pointToLine(point: Point2, { p1, p2 }: Segment2): Point2;
    function circleToSegment({ x: cx, y: cy, radius }: Circle2, segment: Segment2): Point2 | null;
}
