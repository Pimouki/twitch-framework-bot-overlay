/**
 * use Sorted algo for same radius point
 * use All for few item
 * binaryTree and QuadraticTree are not wet implemented
 */
import { Point } from "./point";
import Point2 = Point.Point2;
export type AlgorithmType = "sorted" | "all" | "binaryTree" | "quadraticTree";
interface isCollideResponse<T extends CanCollide> {
    a: T;
    b: T;
}
export interface CanCollide extends Point2 {
    isCollide(item: CanCollide): boolean;
}
export declare class Collider<T extends CanCollide> {
    algorithmType: AlgorithmType;
    items: T[];
    constructor(algorithmType: AlgorithmType, items?: T[]);
    getCollisions(): isCollideResponse<T>[];
}
export {};
